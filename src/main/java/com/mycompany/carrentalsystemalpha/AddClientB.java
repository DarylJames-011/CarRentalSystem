/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.carrentalsystemalpha;

import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Image;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.*;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Daryl James
 */
public class AddClientB extends javax.swing.JDialog {

    /**
     * Creates new form AddClientB
     */

        
    
      public AddClientB(java.awt.Frame parent, boolean modal, String userId, int adminId) {
        super(parent, modal);
        this.clientid = userId;
        this.adminID = adminId;
        initComponents();
         if (clientid != null && !clientid.isEmpty() && adminID == 0) {
            fetchdata();
            setTitle("Car Rental System - Edit Client");
            jLabel4.setText("Edit Client");
            jButton2.setText("Save Information");  
            setLocationRelativeTo(null);
        } else {
            setLocationRelativeTo(null);
            setTitle("Car Rental System - Add new Client");
            Admindata(); 
         }
       
    }
    
    private String clientid = null;
    private JFrame frame;
    private File selectedFile;  
    private String imgurl;
    private final int adminID;
    private String adminName;
    private String role;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
     public boolean isValidName(String name) {
     // Trim leading/trailing spaces first
     name = name.trim();
    
     return name.matches("^[A-Za-z]+( [A-Za-z]\\.)?( [A-Za-z]+)*$") && name.length() <= 50;
    }
     
    private void fetchdata() {
       
    String sql = "SELECT * FROM user_table WHERE user_id = ? AND role = 'Ã‡lient'";
    try (Connection conn = DatabaseConnection.connect()){
    PreparedStatement ps = conn.prepareStatement(sql);  
    ps.setString(1, clientid);
    ResultSet rs = ps.executeQuery();
    if (rs.next()) {

        
        namefield.setText(rs.getString("full_name"));
        adrsfield.setText(rs.getString("address"));
        numfield.setText(rs.getString("Phone_num"));
        Boolean verified = rs.getBoolean("Verified");
        if (verified) {
            verifiedbx.setSelectedIndex(0);
            verifiedbx.setEnabled(false);
            jButton1.setEnabled(false);
        } else {
            verifiedbx.setSelectedIndex(1);
        }
        String sql1 = "SELECT * FROM user_data WHERE user_id = ?";
        PreparedStatement ps1 = conn.prepareStatement(sql1);
        ps1.setString(1, clientid);
        ResultSet rs1 = ps1.executeQuery();
        
        if(rs1.next()) {
                imgurl = rs1.getString("id_photo");
                
                if (imgurl != null && !imgurl.isEmpty()) {
                    previewbtn.setEnabled(true);
                    selectedFile = new File(imgurl);
                }
                else {

                    previewbtn.setEnabled(false);
                }
        }
        }}
    
    catch(SQLException e) {
        e.printStackTrace();
    }
    
    
    
    
    
    
    
    
    
    
    } 
    
    private void Admindata() {
        String sql = "SELECT * FROM user_table WHERE user_ID = ?";
        try (Connection conn = DatabaseConnection.connect()) {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, adminID);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                adminName = rs.getString("full_name");
                role = rs.getString("role");
                System.out.println(adminName);
                
            }   
        
        }
        catch (SQLException e) {
            e.printStackTrace();
            
    }}
    
     
    private void editdata() {
        if ("S_Admin".equalsIgnoreCase(role)) {
        
        
        String sql = "UPDATE user_table SET full_name = ?, address = ?, Phone_num = ?, verified = ? WHERE user_id = ?";
        try (Connection conn = DatabaseConnection.connect()) {
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setString(1, namefield.getText());
        ps.setString(2, adrsfield.getText());
        ps.setString(3, numfield.getText());
        if(imgurl != null && !imgurl.isEmpty()) {
            ps.setBoolean(4, true);
        } else {
            ps.setBoolean(4, false);
        }
        ps.setString(5, clientid);
        
        ps.executeUpdate();
        Success dialog1 = new Success(this,true,"Information has been saved!");
                    dialog1.setVisible(true);
                    this.dispose();
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
        }
        else {
              JOptionPane.showMessageDialog(null, 
            "You don't have a permission to change Client's Info", 
            "Warning", JOptionPane.INFORMATION_MESSAGE);
           
        
        }
    
    
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        namefield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        adrsfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        numfield = new javax.swing.JFormattedTextField();
        verifiedbx = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        previewbtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel1.setText("Username");

        namefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namefieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel2.setText("Home Address");

        adrsfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adrsfieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel3.setText("Phone Number");

        try {
            numfield.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        numfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numfieldActionPerformed(evt);
            }
        });

        verifiedbx.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        verifiedbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));
        verifiedbx.setSelectedIndex(-1);
        verifiedbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifiedbxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel5.setText("Verified");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel6.setText("Valid ID Photo");

        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jButton1.setText("Add File");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        previewbtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        previewbtn.setText("Preview");
        previewbtn.setEnabled(false);
        previewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewbtnActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jButton2.setText("Add Cllient");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namefield)
                    .addComponent(adrsfield)
                    .addComponent(numfield)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(verifiedbx, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(previewbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(63, 63, 63)
                                .addComponent(jLabel6)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adrsfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(verifiedbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(previewbtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel4.setText("ADD A CLIENT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void namefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namefieldActionPerformed

    private void adrsfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adrsfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adrsfieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileFilter(new FileNameExtensionFilter(
                "Image Files (*.jpg, *.png)", "jpg", "jpeg", "png"));
            fileChooser.setAcceptAllFileFilterUsed(false);

            int option = fileChooser.showOpenDialog(frame);
            if (option == JFileChooser.APPROVE_OPTION) {
                selectedFile = fileChooser.getSelectedFile();
                if (clientid != null && !clientid.isEmpty()) {
                imgurl = selectedFile.getAbsolutePath();
                }
                previewbtn.setEnabled(true);
            }  
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void previewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewbtnActionPerformed
      if (clientid == null || clientid.isEmpty()) {
    if (selectedFile != null) {
        // Show image from selected file
        ImageIcon icon = new ImageIcon(
            new ImageIcon(selectedFile.getAbsolutePath())
                .getImage()
                .getScaledInstance(400, 300, Image.SCALE_SMOOTH)
        );

        JLabel imgLabel = new JLabel(icon);
        JOptionPane.showMessageDialog(frame, imgLabel, 
                "Preview Image", JOptionPane.PLAIN_MESSAGE);
    }
} else {
    // Show image from imgurl (database path)
    if (imgurl != null && !imgurl.isEmpty()) {
        File imgFile = new File(imgurl);
        if (imgFile.exists()) {
            ImageIcon icon = new ImageIcon(
                new ImageIcon(imgFile.getAbsolutePath())
                    .getImage()
                    .getScaledInstance(400, 300, Image.SCALE_SMOOTH)
            );

            JLabel imgLabel = new JLabel(icon);
            JOptionPane.showMessageDialog(frame, imgLabel, 
                    "Preview Image", JOptionPane.PLAIN_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(frame, 
                "Image file not found: " + imgurl, 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(frame, 
            "No image URL found for this client.", 
            "Info", JOptionPane.INFORMATION_MESSAGE);
    }
}

       
        
                 
 
        // TODO add your handling code here:
    }//GEN-LAST:event_previewbtnActionPerformed

    private void numfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numfieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String namef = namefield.getText();
        String addrsf = adrsfield.getText();
        String phonm = numfield.getText();
        String firstName = namefield.getText().trim();
        
        
         if (firstName.isEmpty()) {
            Error dialog = new Error(this, true, "Invalid Full Name, please enter at least 2 letters.");
            dialog.setVisible(true);
        }
        else if (!isValidName(firstName)) {
            Error dialog = new Error(this, true, "Invalid Full Name, Please use letters only!");
            dialog.setVisible(true);
        }
        else if(addrsf.isEmpty()) {
            Error dialog = new Error(this, true, "Please add a Address");
            dialog.setVisible(true);
        }
        else if (!phonm.matches("\\d{10,11}")) {
            Error dialog = new Error(this, true, "Invalid Phone Number. Please enter 10-11 digits.");
            dialog.setVisible(true);
        }
        else if (verifiedbx.getSelectedIndex() == -1) {
            Error dialog = new Error(this, true, "Please select an option from the Verified Box");
            dialog.setVisible(true);        
        }
        else if (verifiedbx.getSelectedIndex() == 0 && selectedFile == null) {
            Error dialog = new Error(this, true, "The Client Can't be verified without a Valid Id");
            dialog.setVisible(true);
        }
        else if (verifiedbx.getSelectedIndex() == 1 && selectedFile != null) {
            Error dialog = new Error(this, true, "Please choose yes from the option if client is verified.");
            dialog.setVisible(true);
        }
        else{
            if (clientid == null || clientid.isEmpty() && adminID != 0) {
            
            // Hash the password (for now, simple, later use BCrypt)
            //SQL Queries is part of an example in a basic OOP functions where a user can ADD or VIEW the information
            try (Connection conn = DatabaseConnection.connect()) {
                String sql = "INSERT INTO user_table (full_name, address, Phone_num, password, role, verified) VALUES (?, ?, ?, ?, ?, ?)";
                java.sql.PreparedStatement pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
                pst.setString(1, namef);
                pst.setString(2, addrsf);
                pst.setString(3, phonm);
                pst.setString(4, "NULL");
                pst.setString(5, "Client");
                if (verifiedbx.getSelectedIndex() == 0) {
                pst.setBoolean(6, true);
                }
                else {
                pst.setBoolean(6, false);
                }
                int rowuser = pst.executeUpdate();
                ResultSet rs = pst.getGeneratedKeys();
                int userId = 0;
                if (rs.next()) {
                    userId = rs.getInt(1);
                }
                
                String sqlMeta = "INSERT INTO user_data (user_id, id_photo, made_by) VALUES (?, ?, ?)";
                PreparedStatement stmtdata = conn.prepareStatement(sqlMeta);
                    stmtdata.setInt(1, userId);
                    if (selectedFile != null) {
                     
                     stmtdata.setString(2, selectedFile.getAbsolutePath()); 
                } else {
                    stmtdata.setNull(2, java.sql.Types.VARCHAR); 
                }   
                    
                    stmtdata.setString(3, adminName);
                    
                int rowdata = stmtdata.executeUpdate();
                
                if (rowdata > 0 && rowuser > 0) {
                    Success dialog1 = new Success(this,true,"Added New Client!");
                    dialog1.setVisible(true);
                    this.dispose();
                }
            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }}      
        
        else {
        
            editdata();
        
        }}
        

        
        
         // TODO add your handling code here:
 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void verifiedbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifiedbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_verifiedbxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            // Apply modern Look and Feel for all Swing components
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        //</editor-fold>

        /* Create and display the dialog */

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adrsfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField namefield;
    private javax.swing.JFormattedTextField numfield;
    private javax.swing.JButton previewbtn;
    private javax.swing.JComboBox<String> verifiedbx;
    // End of variables declaration//GEN-END:variables
}
